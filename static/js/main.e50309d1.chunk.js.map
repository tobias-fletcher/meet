{"version":3,"sources":["Alert.js","CitySearch.js","NumberOfEvents.js","Event.js","EventList.js","mock-data.js","api.js","WelcomeScreen.jsx","EventGenre.js","globalStyles.js","Theme.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Alert","props","getStyle","color","className","style","this","text","Component","InfoAlert","ErrorAlert","display","textAlign","justifyContent","CitySearch","state","query","suggestions","showSuggestions","infoText","handleInputChanged","event","value","target","setState","locations","filter","location","toUpperCase","indexOf","length","handleItemClicked","suggestion","updateEvents","htmlFor","type","onChange","onFocus","placeholder","map","onClick","NumberOfEvents","numberOfEvents","error","handleChange","updateEventCount","id","Event","show","summary","description","showDetails","EventList","events","mockData","kind","etag","status","htmlLink","created","updated","creator","email","self","organizer","start","dateTime","timeZone","end","recurringEventId","originalStartTime","iCalUID","sequence","reminders","useDefault","eventType","extractLocations","Set","checkToken","accessToken","a","fetch","then","res","json","catch","result","getToken","code","encodeCode","encodeURIComponent","access_token","localStorage","setItem","getEvents","NProgress","window","href","startsWith","done","navigator","onLine","getItem","console","log","JSON","parse","getAccessToken","token","removeQuery","url","axios","get","data","stringify","tokenCheck","removeItem","searchParams","URLSearchParams","search","results","authUrl","history","pushState","pathname","newurl","protocol","host","WelcomeScreen","showWelcomeScreen","align","src","alt","rel","EventGenre","useState","setData","COLORS","useEffect","getData","genre","split","includes","name","ResponsiveContainer","height","PieChart","Pie","cx","cy","labelLine","label","percent","toFixed","outerRadius","fill","dataKey","entry","index","Cell","Legend","layout","verticalAlign","GlobalStyles","createGlobalStyle","theme","body","lightTheme","toggleBorder","background","darkTheme","App","currentLocation","eText","undefined","eventsByLocation","slice","eventCount","number","city","shift","changeTheme","mode","mounted","isTokenValid","ScatterChart","margin","top","right","bottom","left","CartesianGrid","XAxis","YAxis","Tooltip","cursor","strokeDasharray","Scatter","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","atatus","install","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","headers","response","contentType","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.e50309d1.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Alert extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.color = null;\r\n    }\r\n\r\n    getStyle = () => {\r\n        return {\r\n            color: this.color,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Alert\">\r\n                <p style={this.getStyle()}>{this.props.text}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass InfoAlert extends Alert {\r\n    constructor(props) {\r\n        super(props);\r\n        this.color = 'blue';\r\n    }\r\n}\r\n\r\nclass ErrorAlert extends Alert {\r\n    constructor(props) {\r\n        super(props);\r\n        this.color = 'red';\r\n    }\r\n\r\n    getStyle = () => {\r\n\r\n        return {\r\n            color: this.color,\r\n            display: 'flex',\r\n            textAlign: 'center',\r\n            justifyContent: 'center'\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport { InfoAlert, ErrorAlert };\r\n","import React, { Component } from 'react';\r\nimport { InfoAlert } from './Alert';\r\n\r\nclass CitySearch extends Component {\r\n    state = {\r\n        query: '',\r\n        suggestions: [],\r\n        showSuggestions: false,\r\n        infoText: ''\r\n\r\n    }\r\n\r\n    handleInputChanged = (event) => {\r\n        const value = event.target.value;\r\n        this.setState({ showSuggestions: true });\r\n        const suggestions = this.props.locations.filter((location) => {\r\n            return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n        });\r\n        if (value === '') {\r\n            this.setState({\r\n                suggestions: [],\r\n                query: '',\r\n                showSuggestions: false,\r\n            })\r\n        };\r\n        if (suggestions.length === 0) {\r\n            this.setState({\r\n                query: value,\r\n                suggestions: [],\r\n                infoText: 'We can not find the city you are looking for. Please try again!',\r\n            });\r\n        } else {\r\n            return this.setState({\r\n                query: value,\r\n                suggestions,\r\n                infoText: '',\r\n            });\r\n        }\r\n    };\r\n\r\n    handleItemClicked = (suggestion) => {\r\n        this.setState({\r\n            query: suggestion,\r\n            showSuggestions: false,\r\n            infoText: ''\r\n        });\r\n        this.props.updateEvents(suggestion, 0);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"CitySearch\">\r\n\r\n                <label htmlFor='CitySearch'>\r\n                    Event Location\r\n                </label>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"city\"\r\n                    value={this.state.query}\r\n                    onChange={this.handleInputChanged}\r\n                    onFocus={() => { this.setState({ showSuggestions: true }) }}\r\n                    placeholder=\"Enter Location\"\r\n                />\r\n\r\n                <ul className=\"suggestions\" style={this.state.showSuggestions ? {} : { display: 'none' }}>\r\n                    {this.state.suggestions.map((suggestion) => (\r\n                        <li\r\n                            key={suggestion}\r\n                            onClick={() => this.handleItemClicked(suggestion)}\r\n                        >{suggestion}</li>\r\n                    ))}\r\n                    <li key={'all'} onClick={() => this.handleItemClicked(\"all\")}>\r\n                        <b>See all cities</b>\r\n                    </li>\r\n                </ul>\r\n\r\n                <InfoAlert text={this.state.infoText} />\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CitySearch","import React from 'react';\r\nimport { Component } from 'react';\r\nimport { ErrorAlert } from './Alert';\r\n\r\nclass NumberOfEvents extends Component {\r\n\r\n    state = {\r\n        numberOfEvents: 10,\r\n        error: ''\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const value = event.target.value;\r\n\r\n        if (value >= 0 && value <= 20) {\r\n            this.setState({\r\n                numberOfEvents: value,\r\n                error: ''\r\n            });\r\n\r\n        } else if (value < 0) {\r\n            return this.setState({\r\n                numberOfEvents: value,\r\n                error: 'Please enter a number between 1 and 20'\r\n            });\r\n        } else {\r\n            return this.setState({\r\n                numberOfEvents: value,\r\n                error: 'Please enter a number between 1 and 20'\r\n            });\r\n        }\r\n        this.props.updateEventCount(value);\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"NumberOfEvents\">\r\n\r\n                    <p>Number of Events</p>\r\n\r\n                    <input\r\n                        type=\"number\"\r\n                        id=\"number\"\r\n                        className=\"event-number-input\"\r\n                        placeholder='10'\r\n                        value={this.state.numberOfEvents}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <ErrorAlert text={this.state.error} />\r\n                </div>\r\n                <br />\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default NumberOfEvents;","import React, { Component } from \"react\";\r\n\r\nclass Event extends Component {\r\n\r\n    state = {\r\n        show: false\r\n\r\n    }\r\n\r\n    showDetails() {\r\n        this.setState({\r\n            show: !this.state.show,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const event = this.props.event;\r\n        return (\r\n            <div className='event'>\r\n                <div>\r\n                    <h1 className='event-title'>{this.props.event.summary}</h1>\r\n                    {/*<p className='event-time'>{this.props.event.start.dateTime}</p>*/}\r\n                    <p className='location'>{this.props.event.location}</p>\r\n                </div>\r\n                {\r\n                    this.state.show && (\r\n                        <div className=\"show_event\">\r\n                            <h3> About event:</h3>\r\n                            <p className=\"description\">{event.description}</p>\r\n                        </div>\r\n                    )\r\n                }\r\n                <div>\r\n                    <button className=\"buttonDetails\" onClick={() => { this.showDetails(event) }}>showDetails</button>\r\n\r\n                </div >\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Event;","import React, { Component } from 'react';\r\nimport Event from './Event'; // in src/EventList.js\r\nimport PropTypes from 'prop-types';\r\nclass EventList extends Component {\r\n    render() {\r\n        const { events } = this.props;\r\n        return (\r\n            <ul className=\"EventList\">\r\n                {events.map(event =>\r\n                    <li key={event.id}>\r\n                        <Event event={event} />\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nEventList.propTypes = {\r\n    events: PropTypes.array.isRequired,\r\n}\r\n\r\nexport default EventList;","const mockData =\r\n\r\n    [\r\n        {\r\n            kind: \"calendar#event\",\r\n            etag: \"\\\"3181161784712000\\\"\",\r\n            id: \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\r\n            status: \"confirmed\",\r\n            htmlLink: \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n            created: \"2020-05-19T19:17:46.000Z\",\r\n            updated: \"2020-05-27T12:01:32.356Z\",\r\n            summary: \"Learn JavaScript\",\r\n            description: \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\r\n            location: \"London, UK\",\r\n            creator: {\r\n                email: \"fullstackwebdev@careerfoundry.com\",\r\n                self: true\r\n            },\r\n            organizer: {\r\n                email: \"fullstackwebdev@careerfoundry.com\",\r\n                self: true\r\n            },\r\n            start: {\r\n                dateTime: \"2020-05-19T16:00:00+02:00\",\r\n                timeZone: \"Europe/Berlin\"\r\n            },\r\n            end: {\r\n                dateTime: \"2020-05-19T17:00:00+02:00\",\r\n                timeZone: \"Europe/Berlin\"\r\n            },\r\n            recurringEventId: \"4eahs9ghkhrvkld72hogu9ph3e\",\r\n            originalStartTime: {\r\n                dateTime: \"2020-05-19T16:00:00+02:00\",\r\n                timeZone: \"Europe/Berlin\"\r\n            },\r\n            iCalUID: \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\r\n            sequence: 0,\r\n            reminders: {\r\n                useDefault: true\r\n            },\r\n            eventType: \"default\"\r\n        },\r\n        {\r\n            kind: \"calendar#event\",\r\n            etag: \"\\\"3181159875584000\\\"\",\r\n            id: \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\r\n            status: \"confirmed\",\r\n            htmlLink: \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n            created: \"2020-05-19T19:14:30.000Z\",\r\n            updated: \"2020-05-27T11:45:37.792Z\",\r\n            summary: \"React is Fun\",\r\n            description: \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction.\",\r\n            location: \"Berlin, Germany\",\r\n            creator: {\r\n                email: \"fullstackwebdev@careerfoundry.com\",\r\n                self: true\r\n            },\r\n            organizer: {\r\n                email: \"fullstackwebdev@careerfoundry.com\",\r\n                self: true\r\n            },\r\n            start: {\r\n                dateTime: \"2020-05-20T14:00:00+02:00\",\r\n                timeZone: \"Europe/Berlin\"\r\n            },\r\n            end: {\r\n                dateTime: \"2020-05-20T15:00:00+02:00\",\r\n                timeZone: \"Europe/Berlin\"\r\n            },\r\n            recurringEventId: \"3qtd6uscq4tsi6gc7nmmtpqlct\",\r\n            originalStartTime: {\r\n                dateTime: \"2020-05-20T14:00:00+02:00\",\r\n                timeZone: \"Europe/Berlin\"\r\n            },\r\n            iCalUID: \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\r\n            sequence: 0,\r\n            reminders: {\r\n                useDefault: true\r\n            },\r\n            eventType: \"default\"\r\n        }\r\n    ]\r\n    ;\r\n\r\n\r\nexport { mockData };","import { mockData } from './mock-data';\r\nimport axios from 'axios';\r\nimport NProgress from 'nprogress';\r\nexport const extractLocations = (events) => {\r\n    var extractLocations = events.map((event) => event.location);\r\n    var locations = [...new Set(extractLocations)];\r\n    return locations;\r\n};\r\n\r\nexport const checkToken = async (accessToken) => {\r\n    const result = await fetch(\r\n        `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\r\n    )\r\n        .then((res) => res.json())\r\n        .catch((error) => error.json());\r\n\r\n    return result;\r\n};\r\n\r\nconst getToken = async (code) => {\r\n    const encodeCode = encodeURIComponent(code);\r\n    const { access_token } = await fetch(\r\n        \"https://msaepjyxal.execute-api.us-east-2.amazonaws.com/dev/api/token/\" + encodeCode\r\n    )\r\n        .then((res) => {\r\n            return res.json();\r\n        })\r\n        .catch((error) => error);\r\n\r\n    access_token && localStorage.setItem(\"access_token\", access_token);\r\n\r\n    return access_token;\r\n};\r\n\r\n\r\nexport const getEvents = async () => {\r\n    NProgress.start();\r\n\r\n    if (window.location.href.startsWith(\"http://localhost\")) {\r\n        NProgress.done();\r\n        return mockData;\r\n    }\r\n\r\n    if (!navigator.onLine) {\r\n        const events = localStorage.getItem(\"lastEvents\");\r\n        NProgress.done();\r\n        console.log(\",,\");\r\n        console.log(events);\r\n        return events ? JSON.parse(events).events : [];\r\n\r\n    };\r\n\r\n\r\n    const token = await getAccessToken();\r\n\r\n    if (token) {\r\n        removeQuery();\r\n        const url = \"https://msaepjyxal.execute-api.us-east-2.amazonaws.com/dev/api/get-events/\" + token;\r\n        const result = await axios.get(url);\r\n        if (result.data) {\r\n            var locations = extractLocations(result.data.events);\r\n            localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\r\n            localStorage.setItem(\"locations\", JSON.stringify(locations));\r\n        }\r\n        NProgress.done();\r\n        return result.data.events;\r\n    }\r\n\r\n};\r\n\r\n\r\nexport const getAccessToken = async () => {\r\n    const accessToken = localStorage.getItem('access_token');\r\n    const tokenCheck = accessToken && (await checkToken(accessToken));\r\n\r\n    if (!accessToken || tokenCheck.error) {\r\n        await localStorage.removeItem(\"access_token\");\r\n        const searchParams = new URLSearchParams(window.location.search);\r\n        const code = await searchParams.get(\"code\");\r\n        if (!code) {\r\n            const results = await axios.get(\r\n                \"https://msaepjyxal.execute-api.us-east-2.amazonaws.com/dev/api/get-auth-url\"\r\n            );\r\n            const { authUrl } = results.data;\r\n            return (window.location.href = authUrl);\r\n        }\r\n        return code && getToken(code);\r\n    }\r\n    return accessToken;\r\n}\r\nconst removeQuery = () => {\r\n    if (window.history.pushState && window.location.pathname) {\r\n        var newurl =\r\n            window.location.protocol +\r\n            \"//\" +\r\n            window.location.host +\r\n            window.location.pathname;\r\n        window.history.pushState(\"\", \"\", newurl);\r\n    } else {\r\n        newurl = window.location.protocol + \"//\" + window.location.host;\r\n        window.history.pushState(\"\", \"\", newurl);\r\n    }\r\n};","import React from \"react\";\r\nimport './WelcomeScreen.css';\r\nfunction WelcomeScreen(props) {\r\n    console.log('hello');\r\n    return props.showWelcomeScreen ?\r\n        (\r\n            <div className=\"WelcomeScreen\">\r\n                <h1>Welcome to the Meet app</h1>\r\n                <h4>\r\n                    Log in to see upcoming events around the world for\r\n                    full-stack\r\n                    developers\r\n                </h4>\r\n                <div className=\"button_cont\" align=\"center\">\r\n                    <div className=\"google-btn\">\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img\r\n                                className=\"google-icon\"\r\n                                src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Log\r\no.svg\"\r\n                                alt=\"Google sign-in\"\r\n                            />\r\n                        </div>\r\n                        <button onClick={() => { props.getAccessToken() }}\r\n                            rel=\"nofollow noopener\"\r\n                            className=\"btn-text\"\r\n                        >\r\n                            <b>Sign in with google</b>\r\n                        </button>\r\n                        Page 1\r\n                    </div>\r\n                </div>\r\n                <a\r\n                    href=\"https://tobias-fletcher.github.io/meet/privacy.html\"\r\n                    rel=\"nofollow noopener\"\r\n                >\r\n                    Privacy policy\r\n                </a>\r\n            </div>\r\n        )\r\n        : null\r\n}\r\nexport default WelcomeScreen;","import React, { useEffect, useState } from 'react';\r\nimport { Cell, Legend, Pie, PieChart, ResponsiveContainer } from 'recharts';\r\n\r\nconst EventGenre = ({ events }) => {\r\n    const [data, setData] = useState([]);\r\n    const COLORS = ['#E6E6FA', '#8A2BE2', '#9370DB', '#4B0082', '#9400D3'];\r\n\r\n    useEffect(() => {\r\n        setData(() => getData());\r\n        // eslint-disable-next-line\r\n    }, [events]);\r\n\r\n    const getData = () => {\r\n        const genres = ['React', 'JavaScript', 'Node', 'jQuery', 'AngularJS'];\r\n        const data = genres.map((genre) => {\r\n            const value = events.filter((event) => event.summary.split(' ').includes(genre)).length;\r\n            return { name: genre, value };\r\n        });\r\n        return data;\r\n    };\r\n\r\n    return (\r\n        <ResponsiveContainer height={400}>\r\n            <PieChart>\r\n                <Pie\r\n                    data={data}\r\n                    cx='50%'\r\n                    cy='50%'\r\n                    labelLine={true}\r\n                    label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}\r\n                    outerRadius={100}\r\n                    fill=\"#8884d8\"\r\n                    dataKey=\"value\"\r\n                >\r\n                    {data.map((entry, index) => (\r\n                        <Cell key={`cell-${index}`} fill={COLORS[index]} />\r\n                    ))}\r\n                </Pie>\r\n                <Legend layout=\"horizontal\" align=\"center\" verticalAlign=\"top\"></Legend>\r\n            </PieChart>\r\n        </ResponsiveContainer>\r\n    );\r\n};\r\n\r\nexport default EventGenre;","import { createGlobalStyle } from \"styled-components\"\r\nexport const GlobalStyles = createGlobalStyle`\r\n  body {\r\n    background: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n  `","export const lightTheme = {\r\n    body: '#FFF',\r\n    text: '#363537',\r\n    toggleBorder: '#FFF',\r\n    background: '#363537',\r\n}\r\nexport const darkTheme = {\r\n    body: '#363537',\r\n    text: '#FAFAFA',\r\n    toggleBorder: '#6B8096',\r\n    background: '#999',\r\n}","import React from 'react';\r\nimport { Component } from 'react';\r\nimport CitySearch from './CitySearch';\r\nimport './App.css';\r\nimport NumberOfEvents from './NumberOfEvents';\r\nimport EventList from './EventList';\r\nimport { getEvents, extractLocations } from './api';\r\nimport { ErrorAlert } from './Alert';\r\nimport WelcomeScreen from './WelcomeScreen';\r\nimport {\r\n  ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer\r\n} from 'recharts';\r\nimport { checkToken, getAccessToken } from\r\n  './api';\r\nimport EventGenre from './EventGenre';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { GlobalStyles } from './globalStyles';\r\nimport './nprogress.css';\r\nimport { lightTheme, darkTheme } from './Theme';\r\n\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    events: [],\r\n    locations: [],\r\n    //showEvents: false\r\n    currentLocation: 'all',\r\n    eText: '',\r\n    showWelcomeScreen: undefined,\r\n    theme: {}\r\n  }\r\n\r\n\r\n  async componentDidMount() {\r\n    this.mounted = true;\r\n    this.setState({\r\n      theme: { mode: 'light' }\r\n    })\r\n    const accessToken = localStorage.getItem('access_token');\r\n    const isTokenValid = (await checkToken(accessToken)).error ? false :\r\n      true;\r\n    const searchParams = new URLSearchParams(window.location.search);\r\n    const code = searchParams.get(\"code\");\r\n    this.setState({ showWelcomeScreen: !(code || isTokenValid) });\r\n    if ((code || isTokenValid) && this.mounted) {\r\n      getEvents().then((events) => {\r\n        if (this.mounted) {\r\n          this.setState({ events, locations: extractLocations(events) });\r\n        }\r\n      });\r\n    }\r\n\r\n\r\n\r\n    if (!navigator.onLine) {\r\n      this.setState({\r\n        eText: 'You are currently offline.'\r\n      });\r\n    } else {\r\n      this.setState({\r\n        eText: ''\r\n      });\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.mounted = false;\r\n  }\r\n\r\n  updateEvents = (location) => {\r\n    getEvents().then((events) => {\r\n      const eventsByLocation = (location === 'all') ? events : events.filter((event) => event.location === location);\r\n      const { numberOfEvents } = this.state;\r\n      this.setState({\r\n        events: eventsByLocation.slice(0, numberOfEvents),\r\n        currentLocation: location\r\n      });\r\n    });\r\n  }\r\n\r\n  updateEventCount = (eventCount) => {\r\n    const { currentLocation } = this.state;\r\n    this.setState({\r\n      numberOfEvents: eventCount\r\n    });\r\n    this.updateEvents(currentLocation);\r\n  }\r\n\r\n  getData = () => {\r\n    const { locations, events } = this.state;\r\n    const data = locations.map((location) => {\r\n      const number = events.filter((event) => event.location === location).length\r\n      const city = location.split(', ').shift()\r\n      return { city, number };\r\n    })\r\n    return data;\r\n  }\r\n\r\n  changeTheme = (theme) => {\r\n    if (theme.mode === 'dark') {\r\n      theme = { mode: 'light' }\r\n\r\n    } else if (theme.mode === 'light') {\r\n      theme = { mode: 'dark' }\r\n    }\r\n    this.setState({ theme })\r\n  }\r\n\r\n  render() {\r\n\r\n    const { events } = this.state;\r\n    const { theme } = this.state;\r\n    if (this.state.showWelcomeScreen === undefined) return <div\r\n      className=\"App\" />\r\n    return (\r\n      <ThemeProvider theme={theme.mode === 'light' ? lightTheme : darkTheme}>\r\n        <GlobalStyles />\r\n        <div className=\"App\">\r\n          <button className=\"toggleButton\" onClick={() => this.changeTheme(theme)}>Change Theme</button>\r\n          <ErrorAlert text={this.state.eText} />\r\n          <CitySearch locations={this.state.locations} updateEvents={this.updateEvents} />\r\n          <NumberOfEvents numberOfEvents={this.state.numberOfEvents} updateEventCount={this.updateEventCount} />\r\n          <h4>Events in each city</h4>\r\n          <div className='data-vis-wrapper'>\r\n            <EventGenre events={events} />\r\n            <ResponsiveContainer height={400}>\r\n              <ScatterChart margin={{ top: 20, right: 20, bottom: 20, left: 20 }}>\r\n                <CartesianGrid />\r\n                <XAxis dataKey=\"city\" name=\"city\" type=\"category\" />\r\n                <YAxis dataKey=\"number\" name=\"numbert\" type=\"number\" />\r\n                <Tooltip cursor={{ strokeDasharray: '3 3' }} />\r\n                <Scatter data={this.getData()} fill=\"#8884d8\" />\r\n              </ScatterChart>\r\n\r\n            </ResponsiveContainer>\r\n          </div>\r\n          <EventList events={this.state.events} />\r\n          <WelcomeScreen showWelcomeScreen={this.state.showWelcomeScreen}\r\n            getAccessToken={() => { getAccessToken() }} />\r\n\r\n        </div>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.0/8 are considered localhost for IPv4.\r\n  window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport * as atatus from 'atatus-spa';\r\n\r\n\r\n\r\natatus.config('a3a5231a0faa44e49f9f03ceba8dadad').install();\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}