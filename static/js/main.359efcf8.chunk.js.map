{"version":3,"sources":["CitySearch.js","Event.js","NumberOfEvents.js","EventList.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["CitySearch","state","query","suggestions","showSuggestions","undefined","handleInputChanged","event","value","target","props","locations","filter","location","toUpperCase","indexOf","setState","handleItemClicked","suggestion","updateEvents","className","type","this","onChange","onFocus","style","display","map","onClick","Component","Event","show","console","log","summary","description","showDetails","EventList","events","id","mockData","kind","etag","status","htmlLink","created","updated","creator","email","self","organizer","start","dateTime","timeZone","end","recurringEventId","originalStartTime","iCalUID","sequence","reminders","useDefault","eventType","extractLocations","Set","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","getToken","code","encodeCode","encodeURIComponent","access_token","localStorage","setItem","getEvents","NProgress","window","href","startsWith","done","navigator","onLine","getItem","JSON","parse","getAccessToken","token","removeQuery","url","axios","get","data","stringify","tokenCheck","removeItem","searchParams","URLSearchParams","search","results","authUrl","history","pushState","pathname","newurl","protocol","host","App","locationEvents","mounted","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.359efcf8.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass CitySearch extends Component {\r\n    state = {\r\n        query: '',\r\n        suggestions: [],\r\n        showSuggestions: undefined\r\n    }\r\n\r\n    handleInputChanged = (event) => {\r\n        const value = event.target.value;\r\n        const suggestions = this.props.locations.filter((location) => {\r\n            return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n        });\r\n        this.setState({\r\n            query: value,\r\n            suggestions,\r\n            showSuggestions: undefined\r\n        });\r\n    };\r\n\r\n    handleItemClicked = (suggestion) => {\r\n        this.setState({\r\n            query: suggestion,\r\n            showSuggestions: false\r\n        });\r\n        this.props.updateEvents(suggestion);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"CitySearch\">\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"city\"\r\n                    value={this.state.query}\r\n                    onChange={this.handleInputChanged}\r\n                    onFocus={() => { this.setState({ showSuggestions: true }) }}\r\n                />\r\n                <ul className=\"suggestions\" style={this.state.showSuggestions ? {} : { display: 'none' }}>\r\n                    {this.state.suggestions.map((suggestion) => (\r\n                        <li\r\n                            key={suggestion}\r\n                            onClick={() => this.handleItemClicked(suggestion)}\r\n                        >{suggestion}</li>\r\n                    ))}\r\n                    <li onClick={() => this.handleItemClicked(\"all\")}>\r\n                        <b>See all cities</b>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CitySearch;","import React, { Component } from \"react\";\r\n\r\nclass Event extends Component {\r\n\r\n    state = {\r\n        show: false\r\n\r\n    }\r\n\r\n    showDetails() {\r\n        this.setState({\r\n            show: !this.state.show,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const event = this.props.event;\r\n        console.log('here');\r\n        console.log(this.props.event.summary);\r\n        return (\r\n            <div className='event'>\r\n                <div>\r\n                    <h1 className='event-title'>{this.props.event.summary}</h1>\r\n                    {/*<p className='event-time'>{this.props.event.start.dateTime}</p>*/}\r\n                    <p className='location'>{this.props.event.location}</p>\r\n                </div>\r\n                {\r\n                    this.state.show && (\r\n                        <div className=\"show_event\">\r\n                            <h3> About event:</h3>\r\n                            <p className=\"description\">{event.description}</p>\r\n                        </div>\r\n                    )\r\n                }\r\n                <div>\r\n                    <button className=\"buttonDetails\" onClick={() => { this.showDetails(event) }}>showDetails</button>\r\n\r\n                </div >\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Event;","import React, { useState } from 'react';\r\nimport { Component } from 'react';\r\n\r\n\r\nclass NumberOfEvents extends Component {\r\n\r\n    state = {\r\n        numberOfEvents: 10,\r\n        error: 'Please input number between 1 & 20'\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const value = event.target.value;\r\n\r\n        if (value >= 1 && value <= 20) {\r\n            this.setState({\r\n                numberOfEvents: value\r\n\r\n            });\r\n\r\n        } else {\r\n            return this.state.error\r\n        }\r\n    }\r\n    render() {\r\n        const numberOfEvents = 5;\r\n\r\n        return (\r\n            <div className=\"NumberOfEvents\">\r\n\r\n                <p>Number of Events</p>\r\n                <input\r\n                    type=\"number\"\r\n                    className=\"event-number-input\"\r\n                    placeholder='Enter Number'\r\n                    value={numberOfEvents}\r\n                    onChange={this.handleChange}\r\n                />\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default NumberOfEvents;","import React, { Component } from 'react';\r\nimport Event from './Event'; // in src/EventList.js\r\nimport PropTypes from 'prop-types';\r\nclass EventList extends Component {\r\n    render() {\r\n        const { events } = this.props;\r\n        console.log(events);\r\n        return (\r\n            <ul className=\"EventList\">\r\n                {events.map(event =>\r\n                    <li key={event.id}>\r\n                        <Event event={event} />\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nEventList.propTypes = {\r\n    events: PropTypes.array.isRequired,\r\n}\r\n\r\nexport default EventList;","const mockData =\r\n\r\n    [\r\n        {\r\n            kind: \"calendar#event\",\r\n            etag: \"\\\"3181161784712000\\\"\",\r\n            id: \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\r\n            status: \"confirmed\",\r\n            htmlLink: \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n            created: \"2020-05-19T19:17:46.000Z\",\r\n            updated: \"2020-05-27T12:01:32.356Z\",\r\n            summary: \"Learn JavaScript\",\r\n            description: \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\r\n            location: \"London, UK\",\r\n            creator: {\r\n                email: \"fullstackwebdev@careerfoundry.com\",\r\n                self: true\r\n            },\r\n            organizer: {\r\n                email: \"fullstackwebdev@careerfoundry.com\",\r\n                self: true\r\n            },\r\n            start: {\r\n                dateTime: \"2020-05-19T16:00:00+02:00\",\r\n                timeZone: \"Europe/Berlin\"\r\n            },\r\n            end: {\r\n                dateTime: \"2020-05-19T17:00:00+02:00\",\r\n                timeZone: \"Europe/Berlin\"\r\n            },\r\n            recurringEventId: \"4eahs9ghkhrvkld72hogu9ph3e\",\r\n            originalStartTime: {\r\n                dateTime: \"2020-05-19T16:00:00+02:00\",\r\n                timeZone: \"Europe/Berlin\"\r\n            },\r\n            iCalUID: \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\r\n            sequence: 0,\r\n            reminders: {\r\n                useDefault: true\r\n            },\r\n            eventType: \"default\"\r\n        },\r\n        {\r\n            kind: \"calendar#event\",\r\n            etag: \"\\\"3181159875584000\\\"\",\r\n            id: \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\r\n            status: \"confirmed\",\r\n            htmlLink: \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n            created: \"2020-05-19T19:14:30.000Z\",\r\n            updated: \"2020-05-27T11:45:37.792Z\",\r\n            summary: \"React is Fun\",\r\n            description: \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction.\",\r\n            location: \"Berlin, Germany\",\r\n            creator: {\r\n                email: \"fullstackwebdev@careerfoundry.com\",\r\n                self: true\r\n            },\r\n            organizer: {\r\n                email: \"fullstackwebdev@careerfoundry.com\",\r\n                self: true\r\n            },\r\n            start: {\r\n                dateTime: \"2020-05-20T14:00:00+02:00\",\r\n                timeZone: \"Europe/Berlin\"\r\n            },\r\n            end: {\r\n                dateTime: \"2020-05-20T15:00:00+02:00\",\r\n                timeZone: \"Europe/Berlin\"\r\n            },\r\n            recurringEventId: \"3qtd6uscq4tsi6gc7nmmtpqlct\",\r\n            originalStartTime: {\r\n                dateTime: \"2020-05-20T14:00:00+02:00\",\r\n                timeZone: \"Europe/Berlin\"\r\n            },\r\n            iCalUID: \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\r\n            sequence: 0,\r\n            reminders: {\r\n                useDefault: true\r\n            },\r\n            eventType: \"default\"\r\n        }\r\n    ]\r\n    ;\r\n\r\n\r\nexport { mockData };","import { mockData } from './mock-data';\r\nimport axios from 'axios';\r\nimport NProgress from 'nprogress';\r\nexport const extractLocations = (events) => {\r\n    var extractLocations = events.map((event) => event.location);\r\n    var locations = [...new Set(extractLocations)];\r\n    return locations;\r\n};\r\n\r\nconst checkToken = async (accessToken) => {\r\n    const result = await fetch(\r\n        `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\r\n    )\r\n        .then((res) => res.json())\r\n        .catch((error) => error.json());\r\n\r\n    return result;\r\n};\r\n\r\nconst getToken = async (code) => {\r\n    const encodeCode = encodeURIComponent(code);\r\n    const { access_token } = await fetch(\r\n        \"https://msaepjyxal.execute-api.us-east-2.amazonaws.com/dev/api/token/\" + encodeCode\r\n    )\r\n        .then((res) => {\r\n            return res.json();\r\n        })\r\n        .catch((error) => error);\r\n\r\n    access_token && localStorage.setItem(\"access_token\", access_token);\r\n\r\n    return access_token;\r\n};\r\n\r\n\r\nexport const getEvents = async () => {\r\n    NProgress.start();\r\n\r\n    if (window.location.href.startsWith(\"http://localhost\")) {\r\n        NProgress.done();\r\n        return mockData;\r\n    }\r\n\r\n    if (!navigator.onLine) {\r\n        const events = localStorage.getItem(\"lastEvents\");\r\n        NProgress.done();\r\n        console.log(\",,\");\r\n        console.log(events);\r\n        return events ? JSON.parse(events).events : [];\r\n\r\n    };\r\n\r\n\r\n    const token = await getAccessToken();\r\n\r\n    if (token) {\r\n        removeQuery();\r\n        const url = \"https://msaepjyxal.execute-api.us-east-2.amazonaws.com/dev/api/get-events/\" + token;\r\n        const result = await axios.get(url);\r\n        if (result.data) {\r\n            var locations = extractLocations(result.data.events);\r\n            localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\r\n            localStorage.setItem(\"locations\", JSON.stringify(locations));\r\n        }\r\n        NProgress.done();\r\n        return result.data.events;\r\n    }\r\n\r\n};\r\n\r\n\r\nexport const getAccessToken = async () => {\r\n    const accessToken = localStorage.getItem('access_token');\r\n    const tokenCheck = accessToken && (await checkToken(accessToken));\r\n\r\n    if (!accessToken || tokenCheck.error) {\r\n        await localStorage.removeItem(\"access_token\");\r\n        const searchParams = new URLSearchParams(window.location.search);\r\n        const code = await searchParams.get(\"code\");\r\n        if (!code) {\r\n            const results = await axios.get(\r\n                \"https://msaepjyxal.execute-api.us-east-2.amazonaws.com/dev/api/get-auth-url\"\r\n            );\r\n            const { authUrl } = results.data;\r\n            return (window.location.href = authUrl);\r\n        }\r\n        return code && getToken(code);\r\n    }\r\n    return accessToken;\r\n}\r\nconst removeQuery = () => {\r\n    if (window.history.pushState && window.location.pathname) {\r\n        var newurl =\r\n            window.location.protocol +\r\n            \"//\" +\r\n            window.location.host +\r\n            window.location.pathname;\r\n        window.history.pushState(\"\", \"\", newurl);\r\n    } else {\r\n        newurl = window.location.protocol + \"//\" + window.location.host;\r\n        window.history.pushState(\"\", \"\", newurl);\r\n    }\r\n};","import React from 'react';\nimport { Component } from 'react';\nimport CitySearch from './CitySearch';\nimport './App.css';\nimport NumberOfEvents from './NumberOfEvents';\nimport EventList from './EventList';\nimport mockData from './mock-data';\nimport { getEvents, extractLocations } from './api';\n\nimport './nprogress.css';\nclass App extends Component {\n\n  state = {\n    events: [],\n    locations: [],\n    //showEvents: false\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    getEvents().then((events) => {\n      if (this.mounted) {\n        this.setState({ events, locations: extractLocations(events) });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n  updateEvents = (location) => {\n    getEvents().then((events) => {\n      const locationEvents = events.filter((event) => event.location === location);\n      this.setState({\n        events: locationEvents\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <CitySearch locations={this.state.locations} updateEvents={this.updateEvents} />\n        <EventList events={this.state.events} />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}